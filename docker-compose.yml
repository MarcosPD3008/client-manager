version: '3.8'

services:
  backend:
    container_name: quarkus-app
    build:
      context: .
      dockerfile: src/main/docker/Dockerfile.jvm
    restart: unless-stopped
    environment:
      QUARKUS_DATASOURCE_DB_KIND: postgresql
      QUARKUS_DATASOURCE_USERNAME: admin
      QUARKUS_DATASOURCE_PASSWORD: admin
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://db:5432/client_manager
      QUARKUS_DATASOURCE_JDBC_DRIVER: org.postgresql.Driver
      QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION: update
      QUARKUS_HIBERNATE_ORM_LOG_SQL: "true"
      QUARKUS_HTTP_HOST: 0.0.0.0
      QUARKUS_SWAGGER_UI_ALWAYS_INCLUDE: "true"
      QUARKUS_SMALLRYE_OPENAPI_PATH: /q/openapi
      QUARKUS_SWAGGER_UI_PATH: /swagger-ui
      RESTCOUNTRIES_API_URL: https://restcountries.com/v3.1/alpha/
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - client-network  

  db:
    container_name: postgres-db
    image: postgres:15.2-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: client_manager
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - client-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d client_manager"]
      interval: 10s
      retries: 5
      timeout: 5s

networks:
  client-network:
    driver: bridge

volumes:
  db-data:
